apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'


def versionN ="";
if (project.hasProperty("VERSION")) {  
    versionN = "$VERSION"
} else {
    versionN = '0.0.0'
}

sourceCompatibility = 1.7
version = "$versionN"+'-SNAPSHOT'
group = 'com.sciul'

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "http://eaio.com/maven2"
      }
      maven {
       url "https://oss.sonatype.org/content/groups/public"
      }
      maven {
        url "http://repo.spring.io/libs-snapshot"
      }
}

buildscript {
   repositories {
      mavenCentral()
      
       
   }
   
   dependencies {
      classpath 'com.github.townsfolk:gradle-release:1.2'
   }
}
apply plugin: 'release'

dependencies {
    def sdk = files('$buildDir/../../sci-sdk-java/build/libs/sci-sdk-java-0.0.0-SNAPSHOT.jar')
    sdk.each { file ->
        if (!file.exists()) {
            println 'Getting the SDK jar from CENTRAL Repo.'
            compile 'com.sciul:sci-sdk-java:1.0.52-SNAPSHOT'
        }else{
           println 'Getting the SDK jar from LOCAL Repo.'
           compile sdk
        }
    }
    
    compile 'org.springframework:spring-webmvc:4.0.6.RELEASE'
    compile 'commons-httpclient:commons-httpclient:3.1' 
    compile 'ch.qos.logback:logback-classic:1.0.13'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.3'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'org.apache.httpcomponents:httpmime:4.4-alpha1'
    compile 'javax.xml:jaxb-api:2.1'
    compile 'com.amazonaws:aws-java-sdk:1.9.13'    

    testCompile 'junit:junit:4.10'
}

task javadocJar (type: Jar, dependsOn: javadoc) { // (1)
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourceJar (type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

ext {
    pomFilePath = "${project.projectDir}/tmp/pom.xml"
    pomFile = file(pomFilePath)
}

configurations {
    pom
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
    if (pomFile.exists()) {
        pom pomFile
    }
}

task signJars (type : Sign, dependsOn: [jar, javadocJar, sourceJar]) {
    sign configurations.archives
}

task signPom(type: Sign) {
    sign configurations.pom
}

if (project.ext.pomFile.exists()) {
    task preparePublication (dependsOn : [signJars, signPom])
} else {
    task preparePublication (dependsOn : signJars)
}

def getSignatureFiles = {
    def allFiles = project.tasks.signJars.signatureFiles.collect { it }
    def signedSources = allFiles.find { it.name.contains('-sources') }
    def signedJavadoc = allFiles.find { it.name.contains('-javadoc') }
    def signedJar = (allFiles - [signedSources, signedJavadoc])[0]
    return [
            [archive: signedSources, classifier: 'sources', extension: 'jar.asc'],
            [archive: signedJavadoc, classifier: 'javadoc', extension: 'jar.asc'],
            [archive: signedJar,     classifier: null,      extension: 'jar.asc']
    ]
}

def getPomSignature = {
    return project.tasks.signPom.signatureFiles.collect{it}[0]
}

jar.doFirst{
     sourceSets.main.java.srcDirs.each {
        from it
     }
}

jar {
    manifest {
        attributes 'recurly-sdk-java': 'SDK Classes to build Recurly Java app.', 'Implementation-Version': version
    }
}

test {
    systemProperties 'property': 'value'
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
               name 'recurly-sdk-java'
               packaging 'jar'
               description 'SDK Classes to build Recurly Java app.'
               url 'https://github.com/ulini/recurly-sdk-java'

               scm {
                   url 'scm:git@github.com:ulini/recurly-sdk-java.git'
                   connection 'scm:git@github.com:ulini/recurly-sdk-java.git'
                   developerConnection 'scm:git@github.com:ulini/recurly-sdk-java.git'
               }

               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'SR'
                       name 'sr'
                   }
                   developer {
                       id 'GC'
                       name 'gc'
                   }
                   developer {
                       id 'SB'
                       name 'sb'
                   }
                   developer {
                       id 'PM'
                       name 'pm'
                   }
                   developer {
                       id 'LK'
                       name 'lk'
                   }
                   developer {
                       id 'GS'
                       name 'gs'
                   }
               }
           }
        }
    }
}

